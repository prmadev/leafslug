name: no out dated dependencies

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTUP_MAX_RETRIES: 10
  SQLX_OFFLINE: 1
jobs:
  cargo-udeps:
    name: "cargo udeps"

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        build:
        # We test ripgrep on a pinned version of Rust, along with the moving
        # targets of 'stable' and 'beta' for good measure.
        - pinned
        - stable
        - beta
        # Our release builds are generated by a nightly compiler to take
        # advantage of the latest optimizations/compile time improvements. So
        # we test all of them here. (We don't do mips releases, but test on
        # mips for big-endian coverage.)
        - nightly
        - nightly-musl
        - nightly-32
        - nightly-mips
        - nightly-arm
        - macos
        - win-msvc
        - win-gnu
        include:
        - build: pinned
          os: ubuntu-latest
          rust: 1.70.0
        - build: stable
          os: ubuntu-latest
          rust: stable
        - build: beta
          os: ubuntu-latest
          rust: beta
        - build: nightly
          os: ubuntu-latest
          rust: nightly
        - build: nightly-musl
          os: ubuntu-latest
          rust: nightly
          target: x86_64-unknown-linux-musl
        - build: nightly-32
          os: ubuntu-latest
          rust: nightly
          target: i686-unknown-linux-gnu
        - build: nightly-mips
          os: ubuntu-latest
          rust: nightly
          target: mips64-unknown-linux-gnuabi64
        - build: nightly-arm
          os: ubuntu-latest
          rust: nightly
          target: arm-unknown-linux-gnueabihf
        - build: macos
          os: macos-latest
          rust: nightly
        - build: win-msvc
          os: windows-2022
          rust: nightly
        - build: win-gnu
          os: windows-2022
          rust: nightly-x86_64-gnu

    steps:
      - uses: actions/checkout@v3
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install nightly --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock')}}
          restore-keys: ${{ runner.os }}-cargo-

      - name: "Install cargo-udeps"
        run: |
          cargo install --locked cargo-udeps || true
      - run: |
          rustup run nightly cargo udeps


